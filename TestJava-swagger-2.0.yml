#  ___ _            _ _    _ _    __
# / __(_)_ __  _ __| (_)__(_) |_ /_/
# \__ \ | '  \| '_ \ | / _| |  _/ -_)
# |___/_|_|_|_| .__/_|_\__|_|\__\___|
#             |_| Module: TestJava 5
paths:
  /rest/TestJavaUser:
    get:
      summary: Search TestJavaUser business object records or get contextualized metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjavauser-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfTestJavaUser'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: usr_image_id
        description: Search filter for Picture
        type: string
        required: false
      - in: query
        name: usr_login
        description: Search filter for Login
        type: string
        required: false
      - in: query
        name: usr_timezone
        description: Search filter for Time zone
        type: string
        required: false
        enum:
        - Etc/GMT+12
        - Etc/GMT+11
        - Pacific/Midway
        - Pacific/Niue
        - Pacific/Pago_Pago
        - Pacific/Samoa
        - US/Samoa
        - America/Adak
        - America/Atka
        - Etc/GMT+10
        - Pacific/Honolulu
        - Pacific/Johnston
        - Pacific/Rarotonga
        - Pacific/Tahiti
        - SystemV/HST10
        - US/Aleutian
        - US/Hawaii
        - HST
        - Pacific/Marquesas
        - America/Anchorage
        - America/Juneau
        - America/Metlakatla
        - America/Nome
        - America/Sitka
        - America/Yakutat
        - Etc/GMT+9
        - Pacific/Gambier
        - SystemV/YST9
        - SystemV/YST9YDT
        - US/Alaska
        - AST
        - America/Ensenada
        - America/Los_Angeles
        - America/Santa_Isabel
        - America/Tijuana
        - America/Vancouver
        - Canada/Pacific
        - Etc/GMT+8
        - Mexico/BajaNorte
        - PST8PDT
        - Pacific/Pitcairn
        - SystemV/PST8
        - SystemV/PST8PDT
        - US/Pacific
        - PST
        - America/Boise
        - America/Cambridge_Bay
        - America/Chihuahua
        - America/Creston
        - America/Dawson
        - America/Dawson_Creek
        - America/Denver
        - America/Edmonton
        - America/Fort_Nelson
        - America/Hermosillo
        - America/Inuvik
        - America/Mazatlan
        - America/Ojinaga
        - America/Phoenix
        - America/Shiprock
        - America/Whitehorse
        - America/Yellowknife
        - Canada/Mountain
        - Canada/Yukon
        - Etc/GMT+7
        - MST7MDT
        - Mexico/BajaSur
        - Navajo
        - SystemV/MST7
        - SystemV/MST7MDT
        - US/Arizona
        - US/Mountain
        - MST
        - PNT
        - America/Bahia_Banderas
        - America/Belize
        - America/Chicago
        - America/Costa_Rica
        - America/El_Salvador
        - America/Guatemala
        - America/Indiana/Knox
        - America/Indiana/Tell_City
        - America/Knox_IN
        - America/Managua
        - America/Matamoros
        - America/Menominee
        - America/Merida
        - America/Mexico_City
        - America/Monterrey
        - America/North_Dakota/Beulah
        - America/North_Dakota/Center
        - America/North_Dakota/New_Salem
        - America/Rainy_River
        - America/Rankin_Inlet
        - America/Regina
        - America/Resolute
        - America/Swift_Current
        - America/Tegucigalpa
        - America/Winnipeg
        - CST6CDT
        - Canada/Central
        - Canada/Saskatchewan
        - Chile/EasterIsland
        - Etc/GMT+6
        - Mexico/General
        - Pacific/Easter
        - Pacific/Galapagos
        - SystemV/CST6
        - SystemV/CST6CDT
        - US/Central
        - US/Indiana-Starke
        - CST
        - America/Atikokan
        - America/Bogota
        - America/Cancun
        - America/Cayman
        - America/Coral_Harbour
        - America/Detroit
        - America/Eirunepe
        - America/Fort_Wayne
        - America/Grand_Turk
        - America/Guayaquil
        - America/Havana
        - America/Indiana/Indianapolis
        - America/Indiana/Marengo
        - America/Indiana/Petersburg
        - America/Indiana/Vevay
        - America/Indiana/Vincennes
        - America/Indiana/Winamac
        - America/Indianapolis
        - America/Iqaluit
        - America/Jamaica
        - America/Kentucky/Louisville
        - America/Kentucky/Monticello
        - America/Lima
        - America/Louisville
        - America/Montreal
        - America/Nassau
        - America/New_York
        - America/Nipigon
        - America/Panama
        - America/Pangnirtung
        - America/Port-au-Prince
        - America/Porto_Acre
        - America/Rio_Branco
        - America/Thunder_Bay
        - America/Toronto
        - Brazil/Acre
        - Canada/Eastern
        - Cuba
        - EST5EDT
        - Etc/GMT+5
        - Jamaica
        - SystemV/EST5
        - SystemV/EST5EDT
        - US/East-Indiana
        - US/Eastern
        - US/Michigan
        - EST
        - IET
        - America/Anguilla
        - America/Antigua
        - America/Aruba
        - America/Asuncion
        - America/Barbados
        - America/Blanc-Sablon
        - America/Boa_Vista
        - America/Campo_Grande
        - America/Caracas
        - America/Cuiaba
        - America/Curacao
        - America/Dominica
        - America/Glace_Bay
        - America/Goose_Bay
        - America/Grenada
        - America/Guadeloupe
        - America/Guyana
        - America/Halifax
        - America/Kralendijk
        - America/La_Paz
        - America/Lower_Princes
        - America/Manaus
        - America/Marigot
        - America/Martinique
        - America/Moncton
        - America/Montserrat
        - America/Port_of_Spain
        - America/Porto_Velho
        - America/Puerto_Rico
        - America/Santiago
        - America/Santo_Domingo
        - America/St_Barthelemy
        - America/St_Kitts
        - America/St_Lucia
        - America/St_Thomas
        - America/St_Vincent
        - America/Thule
        - America/Tortola
        - America/Virgin
        - Atlantic/Bermuda
        - Brazil/West
        - Canada/Atlantic
        - Chile/Continental
        - Etc/GMT+4
        - SystemV/AST4
        - SystemV/AST4ADT
        - PRT
        - America/St_Johns
        - Canada/Newfoundland
        - CNT
        - America/Araguaina
        - America/Argentina/Buenos_Aires
        - America/Argentina/Catamarca
        - America/Argentina/ComodRivadavia
        - America/Argentina/Cordoba
        - America/Argentina/Jujuy
        - America/Argentina/La_Rioja
        - America/Argentina/Mendoza
        - America/Argentina/Rio_Gallegos
        - America/Argentina/Salta
        - America/Argentina/San_Juan
        - America/Argentina/San_Luis
        - America/Argentina/Tucuman
        - America/Argentina/Ushuaia
        - America/Bahia
        - America/Belem
        - America/Buenos_Aires
        - America/Catamarca
        - America/Cayenne
        - America/Cordoba
        - America/Fortaleza
        - America/Godthab
        - America/Jujuy
        - America/Maceio
        - America/Mendoza
        - America/Miquelon
        - America/Montevideo
        - America/Nuuk
        - America/Paramaribo
        - America/Punta_Arenas
        - America/Recife
        - America/Rosario
        - America/Santarem
        - America/Sao_Paulo
        - Antarctica/Palmer
        - Antarctica/Rothera
        - Atlantic/Stanley
        - Brazil/East
        - Etc/GMT+3
        - AGT
        - BET
        - America/Noronha
        - Atlantic/South_Georgia
        - Brazil/DeNoronha
        - Etc/GMT+2
        - America/Scoresbysund
        - Atlantic/Azores
        - Atlantic/Cape_Verde
        - Etc/GMT+1
        - Africa/Abidjan
        - Africa/Accra
        - Africa/Bamako
        - Africa/Banjul
        - Africa/Bissau
        - Africa/Casablanca
        - Africa/Conakry
        - Africa/Dakar
        - Africa/El_Aaiun
        - Africa/Freetown
        - Africa/Lome
        - Africa/Monrovia
        - Africa/Nouakchott
        - Africa/Ouagadougou
        - Africa/Sao_Tome
        - Africa/Timbuktu
        - America/Danmarkshavn
        - Antarctica/Troll
        - Atlantic/Canary
        - Atlantic/Faeroe
        - Atlantic/Faroe
        - Atlantic/Madeira
        - Atlantic/Reykjavik
        - Atlantic/St_Helena
        - Eire
        - Etc/GMT
        - Etc/GMT+0
        - Etc/GMT-0
        - Etc/GMT0
        - Etc/Greenwich
        - Etc/UCT
        - Etc/UTC
        - Etc/Universal
        - Etc/Zulu
        - Europe/Belfast
        - Europe/Dublin
        - Europe/Guernsey
        - Europe/Isle_of_Man
        - Europe/Jersey
        - Europe/Lisbon
        - Europe/London
        - GB
        - GB-Eire
        - GMT
        - GMT0
        - Greenwich
        - Iceland
        - Portugal
        - UCT
        - UTC
        - Universal
        - WET
        - Zulu
        - Africa/Algiers
        - Africa/Bangui
        - Africa/Brazzaville
        - Africa/Ceuta
        - Africa/Douala
        - Africa/Kinshasa
        - Africa/Lagos
        - Africa/Libreville
        - Africa/Luanda
        - Africa/Malabo
        - Africa/Ndjamena
        - Africa/Niamey
        - Africa/Porto-Novo
        - Africa/Tunis
        - Arctic/Longyearbyen
        - Atlantic/Jan_Mayen
        - CET
        - Etc/GMT-1
        - Europe/Amsterdam
        - Europe/Andorra
        - Europe/Belgrade
        - Europe/Berlin
        - Europe/Bratislava
        - Europe/Brussels
        - Europe/Budapest
        - Europe/Busingen
        - Europe/Copenhagen
        - Europe/Gibraltar
        - Europe/Ljubljana
        - Europe/Luxembourg
        - Europe/Madrid
        - Europe/Malta
        - Europe/Monaco
        - Europe/Oslo
        - Europe/Paris
        - Europe/Podgorica
        - Europe/Prague
        - Europe/Rome
        - Europe/San_Marino
        - Europe/Sarajevo
        - Europe/Skopje
        - Europe/Stockholm
        - Europe/Tirane
        - Europe/Vaduz
        - Europe/Vatican
        - Europe/Vienna
        - Europe/Warsaw
        - Europe/Zagreb
        - Europe/Zurich
        - MET
        - Poland
        - ECT
        - Africa/Blantyre
        - Africa/Bujumbura
        - Africa/Cairo
        - Africa/Gaborone
        - Africa/Harare
        - Africa/Johannesburg
        - Africa/Juba
        - Africa/Khartoum
        - Africa/Kigali
        - Africa/Lubumbashi
        - Africa/Lusaka
        - Africa/Maputo
        - Africa/Maseru
        - Africa/Mbabane
        - Africa/Tripoli
        - Africa/Windhoek
        - Asia/Amman
        - Asia/Beirut
        - Asia/Damascus
        - Asia/Famagusta
        - Asia/Gaza
        - Asia/Hebron
        - Asia/Jerusalem
        - Asia/Nicosia
        - Asia/Tel_Aviv
        - EET
        - Egypt
        - Etc/GMT-2
        - Europe/Athens
        - Europe/Bucharest
        - Europe/Chisinau
        - Europe/Helsinki
        - Europe/Kaliningrad
        - Europe/Kiev
        - Europe/Mariehamn
        - Europe/Nicosia
        - Europe/Riga
        - Europe/Sofia
        - Europe/Tallinn
        - Europe/Tiraspol
        - Europe/Uzhgorod
        - Europe/Vilnius
        - Europe/Zaporozhye
        - Israel
        - Libya
        - ART
        - CAT
        - Africa/Addis_Ababa
        - Africa/Asmara
        - Africa/Asmera
        - Africa/Dar_es_Salaam
        - Africa/Djibouti
        - Africa/Kampala
        - Africa/Mogadishu
        - Africa/Nairobi
        - Antarctica/Syowa
        - Asia/Aden
        - Asia/Baghdad
        - Asia/Bahrain
        - Asia/Istanbul
        - Asia/Kuwait
        - Asia/Qatar
        - Asia/Riyadh
        - Etc/GMT-3
        - Europe/Istanbul
        - Europe/Kirov
        - Europe/Minsk
        - Europe/Moscow
        - Europe/Simferopol
        - Europe/Volgograd
        - Indian/Antananarivo
        - Indian/Comoro
        - Indian/Mayotte
        - Turkey
        - W-SU
        - EAT
        - Asia/Tehran
        - Iran
        - Asia/Baku
        - Asia/Dubai
        - Asia/Muscat
        - Asia/Tbilisi
        - Asia/Yerevan
        - Etc/GMT-4
        - Europe/Astrakhan
        - Europe/Samara
        - Europe/Saratov
        - Europe/Ulyanovsk
        - Indian/Mahe
        - Indian/Mauritius
        - Indian/Reunion
        - NET
        - Asia/Kabul
        - Antarctica/Mawson
        - Asia/Aqtau
        - Asia/Aqtobe
        - Asia/Ashgabat
        - Asia/Ashkhabad
        - Asia/Atyrau
        - Asia/Dushanbe
        - Asia/Karachi
        - Asia/Oral
        - Asia/Qyzylorda
        - Asia/Samarkand
        - Asia/Tashkent
        - Asia/Yekaterinburg
        - Etc/GMT-5
        - Indian/Kerguelen
        - Indian/Maldives
        - PLT
        - Asia/Calcutta
        - Asia/Colombo
        - Asia/Kolkata
        - IST
        - Asia/Kathmandu
        - Asia/Katmandu
        - Antarctica/Vostok
        - Asia/Almaty
        - Asia/Bishkek
        - Asia/Dacca
        - Asia/Dhaka
        - Asia/Kashgar
        - Asia/Omsk
        - Asia/Qostanay
        - Asia/Thimbu
        - Asia/Thimphu
        - Asia/Urumqi
        - Etc/GMT-6
        - Indian/Chagos
        - BST
        - Asia/Rangoon
        - Asia/Yangon
        - Indian/Cocos
        - Antarctica/Davis
        - Asia/Bangkok
        - Asia/Barnaul
        - Asia/Ho_Chi_Minh
        - Asia/Hovd
        - Asia/Jakarta
        - Asia/Krasnoyarsk
        - Asia/Novokuznetsk
        - Asia/Novosibirsk
        - Asia/Phnom_Penh
        - Asia/Pontianak
        - Asia/Saigon
        - Asia/Tomsk
        - Asia/Vientiane
        - Etc/GMT-7
        - Indian/Christmas
        - VST
        - Asia/Brunei
        - Asia/Choibalsan
        - Asia/Chongqing
        - Asia/Chungking
        - Asia/Harbin
        - Asia/Hong_Kong
        - Asia/Irkutsk
        - Asia/Kuala_Lumpur
        - Asia/Kuching
        - Asia/Macao
        - Asia/Macau
        - Asia/Makassar
        - Asia/Manila
        - Asia/Shanghai
        - Asia/Singapore
        - Asia/Taipei
        - Asia/Ujung_Pandang
        - Asia/Ulaanbaatar
        - Asia/Ulan_Bator
        - Australia/Perth
        - Australia/West
        - Etc/GMT-8
        - Hongkong
        - PRC
        - Singapore
        - CTT
        - Australia/Eucla
        - Asia/Chita
        - Asia/Dili
        - Asia/Jayapura
        - Asia/Khandyga
        - Asia/Pyongyang
        - Asia/Seoul
        - Asia/Tokyo
        - Asia/Yakutsk
        - Etc/GMT-9
        - Japan
        - Pacific/Palau
        - ROK
        - JST
        - Australia/Adelaide
        - Australia/Broken_Hill
        - Australia/Darwin
        - Australia/North
        - Australia/South
        - Australia/Yancowinna
        - ACT
        - Antarctica/DumontDUrville
        - Antarctica/Macquarie
        - Asia/Ust-Nera
        - Asia/Vladivostok
        - Australia/ACT
        - Australia/Brisbane
        - Australia/Canberra
        - Australia/Currie
        - Australia/Hobart
        - Australia/Lindeman
        - Australia/Melbourne
        - Australia/NSW
        - Australia/Queensland
        - Australia/Sydney
        - Australia/Tasmania
        - Australia/Victoria
        - Etc/GMT-10
        - Pacific/Chuuk
        - Pacific/Guam
        - Pacific/Port_Moresby
        - Pacific/Saipan
        - Pacific/Truk
        - Pacific/Yap
        - AET
        - Australia/LHI
        - Australia/Lord_Howe
        - Antarctica/Casey
        - Asia/Magadan
        - Asia/Sakhalin
        - Asia/Srednekolymsk
        - Etc/GMT-11
        - Pacific/Bougainville
        - Pacific/Efate
        - Pacific/Guadalcanal
        - Pacific/Kosrae
        - Pacific/Norfolk
        - Pacific/Noumea
        - Pacific/Pohnpei
        - Pacific/Ponape
        - SST
        - Antarctica/McMurdo
        - Antarctica/South_Pole
        - Asia/Anadyr
        - Asia/Kamchatka
        - Etc/GMT-12
        - Kwajalein
        - NZ
        - Pacific/Auckland
        - Pacific/Fiji
        - Pacific/Funafuti
        - Pacific/Kwajalein
        - Pacific/Majuro
        - Pacific/Nauru
        - Pacific/Tarawa
        - Pacific/Wake
        - Pacific/Wallis
        - NST
        - NZ-CHAT
        - Pacific/Chatham
        - Etc/GMT-13
        - Pacific/Apia
        - Pacific/Enderbury
        - Pacific/Fakaofo
        - Pacific/Tongatapu
        - MIT
        - Etc/GMT-14
        - Pacific/Kiritimati
      - in: query
        name: usr_minrows
        description: Search filter for Min size of lists
        type: integer
        required: false
      - in: query
        name: usr_maxrows
        description: Search filter for Max size of lists
        type: integer
        required: false
      - in: query
        name: usr_title
        description: Search filter for Title
        type: string
        required: false
        enum:
        - MR
        - MRS
        - MS
      - in: query
        name: usr_first_name
        description: Search filter for First name
        type: string
        required: false
      - in: query
        name: usr_last_name
        description: Search filter for Last name
        type: string
        required: false
      - in: query
        name: usr_lang
        description: Search filter for Language
        type: string
        required: false
        enum:
        - ENU
        - FRA
      - in: query
        name: usr_email
        description: Search filter for Email address
        type: string
        required: false
      - in: query
        name: usr_work_num
        description: Search filter for Work phone number
        type: string
        required: false
      - in: query
        name: usr_home_num
        description: Search filter for Home phone
        type: string
        required: false
      - in: query
        name: usr_cell_num
        description: Search filter for Mobile/cellular phone number
        type: string
        required: false
      - in: query
        name: usr_active
        description: Search filter for Active
        type: string
        required: false
        enum:
        - '0'
        - '1'
        - '2'
        - '3'
      - in: query
        name: usr_home_id
        description: Search filter for Home page
        type: string
        required: false
      - in: query
        name: usr_home_id__viw_name
        description: Search filter for Home page
        type: string
        required: false
      - in: query
        name: usr_address1
        description: Search filter for Address line 1
        type: string
        required: false
      - in: query
        name: usr_address2
        description: Search filter for Address line 2
        type: string
        required: false
      - in: query
        name: usr_zipcode
        description: Search filter for Postal/ZIP code
        type: string
        required: false
      - in: query
        name: usr_city
        description: Search filter for City
        type: string
        required: false
      - in: query
        name: usr_state
        description: Search filter for State
        type: string
        required: false
      - in: query
        name: usr_country
        description: Search filter for Country
        type: string
        required: false
        enum:
        - FR
        - UK
        - ES
        - DE
        - BE
        - CH
        - IE
        - CA
        - US
      - in: query
        name: row_module_id
        description: Search filter for Module
        type: string
        required: false
      - in: query
        name: row_module_id__mdl_name
        description: Search filter for Module name
        type: string
        required: false
      - in: query
        name: usr_menu
        description: Search filter for Menu visible
        type: boolean
        required: false
      - in: query
        name: usr_menu_defcollapsed
        description: Search filter for Menu collapsed by default
        type: boolean
        required: false
      - in: query
        name: usr_menu_defdomain_id
        description: Search filter for Domain menu by default
        type: string
        required: false
      - in: query
        name: usr_menu_defdomain_id__obd_name
        description: Search filter for Default opened domain
        type: string
        required: false
      - in: query
        name: usr_logout
        description: Search filter for Logout
        type: string
        required: false
      - in: query
        name: usr_last_logon
        description: Search filter for Last logon
        type: string
        required: false
      - in: query
        name: usr_dateformat
        description: Search filter for Date format
        type: string
        required: false
        enum:
        - YMD
        - DMY
        - MDY
        - CHF
      - in: query
        name: usr_lang_pref
        description: Search filter for Preferred language
        type: string
        required: false
        enum:
        - ENU
        - FRA
      - in: query
        name: usr_uuid
        description: Search filter for UUID
        type: string
        required: false
      tags:
      - TestJavaUser
  /rest/TestjObjectChild/{row_id}:
    post:
      summary: Create a new TestjObjectChildbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobjectchild-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestjObjectChild'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/TestjObjectChild'
        in: body
        name: body
      tags:
      - TestjObjectChild
      consumes:
      - application/json
    get:
      summary: Get a TestjObjectChild business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobjectchild-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestjObjectChild'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - TestjObjectChild
    delete:
      summary: Delete a TestjObjectChild business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobjectchild-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - TestjObjectChild
    put:
      summary: Update a TestjObjectChildbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobjectchild-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestjObjectChild'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/TestjObjectChild'
        in: body
        name: body
      tags:
      - TestjObjectChild
      consumes:
      - application/json
  /rest/TestJavaUser/{row_id}/publication:User-DEFAULT:
    get:
      summary: Call a custom publication for a TestJavaUser business object record
        or for all records
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjavauser-publication-user-default
      responses:
        '200':
          schema:
            $ref: '#/definitions/PublicationResult'
          description: Success in calling the custom publication
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - TestJavaUser
  /login:
    get:
      summary: Login (obtain bearer token)
      security:
      - basicAuth: []
      produces:
      - text/plain
      - application/json
      operationId: login
      responses:
        '200':
          description: Successful login
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
      parameters:
      - in: query
        name: _output
        description: Optional output format
        type: string
        required: false
        enum:
        - json
        - oauth2
        - token
      tags:
      - session
  /rest/TestjObjectGrandChild/{row_id}:
    post:
      summary: Create a new TestjObjectGrandChildbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobjectgrandchild-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestjObjectGrandChild'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/TestjObjectGrandChild'
        in: body
        name: body
      tags:
      - TestjObjectGrandChild
      consumes:
      - application/json
    get:
      summary: Get a TestjObjectGrandChild business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobjectgrandchild-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestjObjectGrandChild'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - TestjObjectGrandChild
    delete:
      summary: Delete a TestjObjectGrandChild business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobjectgrandchild-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - TestjObjectGrandChild
    put:
      summary: Update a TestjObjectGrandChildbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobjectgrandchild-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestjObjectGrandChild'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/TestjObjectGrandChild'
        in: body
        name: body
      tags:
      - TestjObjectGrandChild
      consumes:
      - application/json
  /logout:
    get:
      summary: Logout (revoke bearer token)
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: logout
      responses:
        '200':
          description: Successfull logout
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
      tags:
      - session
  /rest/TestjObject/{row_id}:
    post:
      summary: Create a new TestjObjectbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobject-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestjObject'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/TestjObject'
        in: body
        name: body
      tags:
      - TestjObject
      consumes:
      - application/json
    get:
      summary: Get a TestjObject business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobject-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestjObject'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - TestjObject
    delete:
      summary: Delete a TestjObject business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobject-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - TestjObject
    put:
      summary: Update a TestjObjectbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobject-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestjObject'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/TestjObject'
        in: body
        name: body
      tags:
      - TestjObject
      consumes:
      - application/json
  /rest/TestjObjectHierarchy:
    get:
      summary: Search TestjObjectHierarchy business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobjecthierarchy-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfTestjObjectHierarchy'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      tags:
      - TestjObjectHierarchy
  /rest/TestjObjectHierarchy/{row_id}:
    post:
      summary: Create a new TestjObjectHierarchybusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobjecthierarchy-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestjObjectHierarchy'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/TestjObjectHierarchy'
        in: body
        name: body
      tags:
      - TestjObjectHierarchy
      consumes:
      - application/json
    get:
      summary: Get a TestjObjectHierarchy business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobjecthierarchy-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestjObjectHierarchy'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - TestjObjectHierarchy
    delete:
      summary: Delete a TestjObjectHierarchy business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobjecthierarchy-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - TestjObjectHierarchy
    put:
      summary: Update a TestjObjectHierarchybusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobjecthierarchy-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestjObjectHierarchy'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/TestjObjectHierarchy'
        in: body
        name: body
      tags:
      - TestjObjectHierarchy
      consumes:
      - application/json
  /:
    get:
      summary: Get user session information
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: info
      responses:
        '200':
          description: Success in getting user session information
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
      parameters:
      - in: query
        name: texts
        description: Texts?
        type: boolean
        required: false
      tags:
      - session
  /rest/TestJavaUser/{row_id}/publication:User-EXCEL:
    get:
      summary: Call a custom publication for a TestJavaUser business object record
        or for all records
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjavauser-publication-user-excel
      responses:
        '200':
          schema:
            $ref: '#/definitions/PublicationResult'
          description: Success in calling the custom publication
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - TestJavaUser
  /rest/TestJavaUser/{row_id}/publication:User-WORD:
    get:
      summary: Call a custom publication for a TestJavaUser business object record
        or for all records
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjavauser-publication-user-word
      responses:
        '200':
          schema:
            $ref: '#/definitions/PublicationResult'
          description: Success in calling the custom publication
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - TestJavaUser
  /rest/TestjObjectGrandChild:
    get:
      summary: Search TestjObjectGrandChild business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobjectgrandchild-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfTestjObjectGrandChild'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: testjObjCode
        description: Search filter for Code
        type: string
        required: false
      - in: query
        name: testjObjFlag
        description: Search filter for Flag
        type: boolean
        required: false
      - in: query
        name: testjObjDesc
        description: Search filter for Description
        type: string
        required: false
      - in: query
        name: testjObjDocumentURL
        description: Search filter for EDM document URL
        type: string
        required: false
      - in: query
        name: testjObjDocument
        description: Search filter for Document to upload to EDM
        type: string
        required: false
      tags:
      - TestjObjectGrandChild
  /rest/TestJavaUser/{row_id}:
    post:
      summary: Create a new TestJavaUserbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjavauser-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestJavaUser'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/TestJavaUser'
        in: body
        name: body
      tags:
      - TestJavaUser
      consumes:
      - application/json
    get:
      summary: Get a TestJavaUser business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjavauser-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestJavaUser'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - TestJavaUser
    delete:
      summary: Delete a TestJavaUser business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjavauser-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - TestJavaUser
    put:
      summary: Update a TestJavaUserbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjavauser-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestJavaUser'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/TestJavaUser'
        in: body
        name: body
      tags:
      - TestJavaUser
      consumes:
      - application/json
  /rest/TestJavaUser/{row_id}/publication:User-VCARD:
    get:
      summary: Call a custom publication for a TestJavaUser business object record
        or for all records
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjavauser-publication-user-vcard
      responses:
        '200':
          schema:
            $ref: '#/definitions/PublicationResult'
          description: Success in calling the custom publication
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - TestJavaUser
  /rest/TestServiceObject:
    get:
      summary: Search TestServiceObject business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testserviceobject-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfTestServiceObject'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: testjSrvCode
        description: Search filter for Code
        type: string
        required: false
      - in: query
        name: testjSrvLabel
        description: Search filter for Label
        type: string
        required: false
      tags:
      - TestServiceObject
  /rest/TestjObject:
    get:
      summary: Search TestjObject business object records or get contextualized metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobject-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfTestjObject'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: testjObjCode
        description: Search filter for Code
        type: string
        required: false
      - in: query
        name: testjObjFlag
        description: Search filter for Flag
        type: boolean
        required: false
      - in: query
        name: testjObjDesc
        description: Search filter for Description
        type: string
        required: false
      - in: query
        name: testjObjDocumentURL
        description: Search filter for EDM document URL
        type: string
        required: false
      - in: query
        name: testjObjDocument
        description: Search filter for Document to upload to EDM
        type: string
        required: false
      tags:
      - TestjObject
  /rest/TestJavaService/{row_id}:
    post:
      summary: Create a new TestJavaServicebusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjavaservice-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestJavaService'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/TestJavaService'
        in: body
        name: body
      tags:
      - TestJavaService
      consumes:
      - application/json
    get:
      summary: Get a TestJavaService business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjavaservice-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestJavaService'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - TestJavaService
    delete:
      summary: Delete a TestJavaService business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjavaservice-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - TestJavaService
    put:
      summary: Update a TestJavaServicebusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjavaservice-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestJavaService'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/TestJavaService'
        in: body
        name: body
      tags:
      - TestJavaService
      consumes:
      - application/json
  /rest/TestJavaService:
    get:
      summary: Search TestJavaService business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjavaservice-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfTestJavaService'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: testSrv1
        description: Search filter for Test 1
        type: string
        required: false
      - in: query
        name: testSrv2
        description: Search filter for Test 2
        type: string
        required: false
      tags:
      - TestJavaService
  /rest/TestServiceObject/{row_id}:
    post:
      summary: Create a new TestServiceObjectbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testserviceobject-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestServiceObject'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/TestServiceObject'
        in: body
        name: body
      tags:
      - TestServiceObject
      consumes:
      - application/json
    get:
      summary: Get a TestServiceObject business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testserviceobject-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestServiceObject'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - TestServiceObject
    delete:
      summary: Delete a TestServiceObject business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testserviceobject-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - TestServiceObject
    put:
      summary: Update a TestServiceObjectbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testserviceobject-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/TestServiceObject'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/TestServiceObject'
        in: body
        name: body
      tags:
      - TestServiceObject
      consumes:
      - application/json
  /rest/TestjObjectChild:
    get:
      summary: Search TestjObjectChild business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-testjobjectchild-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfTestjObjectChild'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: testjObjCode
        description: Search filter for Code
        type: string
        required: false
      - in: query
        name: testjObjFlag
        description: Search filter for Flag
        type: boolean
        required: false
      - in: query
        name: testjObjDesc
        description: Search filter for Description
        type: string
        required: false
      - in: query
        name: testjObjDocumentURL
        description: Search filter for EDM document URL
        type: string
        required: false
      - in: query
        name: testjObjDocument
        description: Search filter for Document to upload to EDM
        type: string
        required: false
      tags:
      - TestjObjectChild
securityDefinitions:
  basicAuth:
    type: basic
  bearerAuth:
    in: header
    name: Authorization
    type: apiKey
definitions:
  Error404:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 404
  TestJavaService:
    type: object
    properties:
      testSrv2:
        description: Test 2
        type: string
      testSrv1:
        description: Test 1
        type: string
      row_id:
        description: Unique technical row ID
        type: string
  ArrayOfTestJavaService:
    type: array
    items:
      $ref: '#/definitions/TestJavaService'
  ArrayOfTestjObjectGrandChild:
    type: array
    items:
      $ref: '#/definitions/TestjObjectGrandChild'
  ArrayOfTestjObjectHierarchy:
    type: array
    items:
      $ref: '#/definitions/TestjObjectHierarchy'
  PublicationResult:
    type: object
    properties:
      mime:
        description: MIME type
        type: string
      content:
        description: Content (plain text or base64 encoded)
        type: string
  TestJavaUser:
    type: object
    properties:
      usr_timezone:
        description: Time zone
        type: string
        enum:
        - Etc/GMT+12
        - Etc/GMT+11
        - Pacific/Midway
        - Pacific/Niue
        - Pacific/Pago_Pago
        - Pacific/Samoa
        - US/Samoa
        - America/Adak
        - America/Atka
        - Etc/GMT+10
        - Pacific/Honolulu
        - Pacific/Johnston
        - Pacific/Rarotonga
        - Pacific/Tahiti
        - SystemV/HST10
        - US/Aleutian
        - US/Hawaii
        - HST
        - Pacific/Marquesas
        - America/Anchorage
        - America/Juneau
        - America/Metlakatla
        - America/Nome
        - America/Sitka
        - America/Yakutat
        - Etc/GMT+9
        - Pacific/Gambier
        - SystemV/YST9
        - SystemV/YST9YDT
        - US/Alaska
        - AST
        - America/Ensenada
        - America/Los_Angeles
        - America/Santa_Isabel
        - America/Tijuana
        - America/Vancouver
        - Canada/Pacific
        - Etc/GMT+8
        - Mexico/BajaNorte
        - PST8PDT
        - Pacific/Pitcairn
        - SystemV/PST8
        - SystemV/PST8PDT
        - US/Pacific
        - PST
        - America/Boise
        - America/Cambridge_Bay
        - America/Chihuahua
        - America/Creston
        - America/Dawson
        - America/Dawson_Creek
        - America/Denver
        - America/Edmonton
        - America/Fort_Nelson
        - America/Hermosillo
        - America/Inuvik
        - America/Mazatlan
        - America/Ojinaga
        - America/Phoenix
        - America/Shiprock
        - America/Whitehorse
        - America/Yellowknife
        - Canada/Mountain
        - Canada/Yukon
        - Etc/GMT+7
        - MST7MDT
        - Mexico/BajaSur
        - Navajo
        - SystemV/MST7
        - SystemV/MST7MDT
        - US/Arizona
        - US/Mountain
        - MST
        - PNT
        - America/Bahia_Banderas
        - America/Belize
        - America/Chicago
        - America/Costa_Rica
        - America/El_Salvador
        - America/Guatemala
        - America/Indiana/Knox
        - America/Indiana/Tell_City
        - America/Knox_IN
        - America/Managua
        - America/Matamoros
        - America/Menominee
        - America/Merida
        - America/Mexico_City
        - America/Monterrey
        - America/North_Dakota/Beulah
        - America/North_Dakota/Center
        - America/North_Dakota/New_Salem
        - America/Rainy_River
        - America/Rankin_Inlet
        - America/Regina
        - America/Resolute
        - America/Swift_Current
        - America/Tegucigalpa
        - America/Winnipeg
        - CST6CDT
        - Canada/Central
        - Canada/Saskatchewan
        - Chile/EasterIsland
        - Etc/GMT+6
        - Mexico/General
        - Pacific/Easter
        - Pacific/Galapagos
        - SystemV/CST6
        - SystemV/CST6CDT
        - US/Central
        - US/Indiana-Starke
        - CST
        - America/Atikokan
        - America/Bogota
        - America/Cancun
        - America/Cayman
        - America/Coral_Harbour
        - America/Detroit
        - America/Eirunepe
        - America/Fort_Wayne
        - America/Grand_Turk
        - America/Guayaquil
        - America/Havana
        - America/Indiana/Indianapolis
        - America/Indiana/Marengo
        - America/Indiana/Petersburg
        - America/Indiana/Vevay
        - America/Indiana/Vincennes
        - America/Indiana/Winamac
        - America/Indianapolis
        - America/Iqaluit
        - America/Jamaica
        - America/Kentucky/Louisville
        - America/Kentucky/Monticello
        - America/Lima
        - America/Louisville
        - America/Montreal
        - America/Nassau
        - America/New_York
        - America/Nipigon
        - America/Panama
        - America/Pangnirtung
        - America/Port-au-Prince
        - America/Porto_Acre
        - America/Rio_Branco
        - America/Thunder_Bay
        - America/Toronto
        - Brazil/Acre
        - Canada/Eastern
        - Cuba
        - EST5EDT
        - Etc/GMT+5
        - Jamaica
        - SystemV/EST5
        - SystemV/EST5EDT
        - US/East-Indiana
        - US/Eastern
        - US/Michigan
        - EST
        - IET
        - America/Anguilla
        - America/Antigua
        - America/Aruba
        - America/Asuncion
        - America/Barbados
        - America/Blanc-Sablon
        - America/Boa_Vista
        - America/Campo_Grande
        - America/Caracas
        - America/Cuiaba
        - America/Curacao
        - America/Dominica
        - America/Glace_Bay
        - America/Goose_Bay
        - America/Grenada
        - America/Guadeloupe
        - America/Guyana
        - America/Halifax
        - America/Kralendijk
        - America/La_Paz
        - America/Lower_Princes
        - America/Manaus
        - America/Marigot
        - America/Martinique
        - America/Moncton
        - America/Montserrat
        - America/Port_of_Spain
        - America/Porto_Velho
        - America/Puerto_Rico
        - America/Santiago
        - America/Santo_Domingo
        - America/St_Barthelemy
        - America/St_Kitts
        - America/St_Lucia
        - America/St_Thomas
        - America/St_Vincent
        - America/Thule
        - America/Tortola
        - America/Virgin
        - Atlantic/Bermuda
        - Brazil/West
        - Canada/Atlantic
        - Chile/Continental
        - Etc/GMT+4
        - SystemV/AST4
        - SystemV/AST4ADT
        - PRT
        - America/St_Johns
        - Canada/Newfoundland
        - CNT
        - America/Araguaina
        - America/Argentina/Buenos_Aires
        - America/Argentina/Catamarca
        - America/Argentina/ComodRivadavia
        - America/Argentina/Cordoba
        - America/Argentina/Jujuy
        - America/Argentina/La_Rioja
        - America/Argentina/Mendoza
        - America/Argentina/Rio_Gallegos
        - America/Argentina/Salta
        - America/Argentina/San_Juan
        - America/Argentina/San_Luis
        - America/Argentina/Tucuman
        - America/Argentina/Ushuaia
        - America/Bahia
        - America/Belem
        - America/Buenos_Aires
        - America/Catamarca
        - America/Cayenne
        - America/Cordoba
        - America/Fortaleza
        - America/Godthab
        - America/Jujuy
        - America/Maceio
        - America/Mendoza
        - America/Miquelon
        - America/Montevideo
        - America/Nuuk
        - America/Paramaribo
        - America/Punta_Arenas
        - America/Recife
        - America/Rosario
        - America/Santarem
        - America/Sao_Paulo
        - Antarctica/Palmer
        - Antarctica/Rothera
        - Atlantic/Stanley
        - Brazil/East
        - Etc/GMT+3
        - AGT
        - BET
        - America/Noronha
        - Atlantic/South_Georgia
        - Brazil/DeNoronha
        - Etc/GMT+2
        - America/Scoresbysund
        - Atlantic/Azores
        - Atlantic/Cape_Verde
        - Etc/GMT+1
        - Africa/Abidjan
        - Africa/Accra
        - Africa/Bamako
        - Africa/Banjul
        - Africa/Bissau
        - Africa/Casablanca
        - Africa/Conakry
        - Africa/Dakar
        - Africa/El_Aaiun
        - Africa/Freetown
        - Africa/Lome
        - Africa/Monrovia
        - Africa/Nouakchott
        - Africa/Ouagadougou
        - Africa/Sao_Tome
        - Africa/Timbuktu
        - America/Danmarkshavn
        - Antarctica/Troll
        - Atlantic/Canary
        - Atlantic/Faeroe
        - Atlantic/Faroe
        - Atlantic/Madeira
        - Atlantic/Reykjavik
        - Atlantic/St_Helena
        - Eire
        - Etc/GMT
        - Etc/GMT+0
        - Etc/GMT-0
        - Etc/GMT0
        - Etc/Greenwich
        - Etc/UCT
        - Etc/UTC
        - Etc/Universal
        - Etc/Zulu
        - Europe/Belfast
        - Europe/Dublin
        - Europe/Guernsey
        - Europe/Isle_of_Man
        - Europe/Jersey
        - Europe/Lisbon
        - Europe/London
        - GB
        - GB-Eire
        - GMT
        - GMT0
        - Greenwich
        - Iceland
        - Portugal
        - UCT
        - UTC
        - Universal
        - WET
        - Zulu
        - Africa/Algiers
        - Africa/Bangui
        - Africa/Brazzaville
        - Africa/Ceuta
        - Africa/Douala
        - Africa/Kinshasa
        - Africa/Lagos
        - Africa/Libreville
        - Africa/Luanda
        - Africa/Malabo
        - Africa/Ndjamena
        - Africa/Niamey
        - Africa/Porto-Novo
        - Africa/Tunis
        - Arctic/Longyearbyen
        - Atlantic/Jan_Mayen
        - CET
        - Etc/GMT-1
        - Europe/Amsterdam
        - Europe/Andorra
        - Europe/Belgrade
        - Europe/Berlin
        - Europe/Bratislava
        - Europe/Brussels
        - Europe/Budapest
        - Europe/Busingen
        - Europe/Copenhagen
        - Europe/Gibraltar
        - Europe/Ljubljana
        - Europe/Luxembourg
        - Europe/Madrid
        - Europe/Malta
        - Europe/Monaco
        - Europe/Oslo
        - Europe/Paris
        - Europe/Podgorica
        - Europe/Prague
        - Europe/Rome
        - Europe/San_Marino
        - Europe/Sarajevo
        - Europe/Skopje
        - Europe/Stockholm
        - Europe/Tirane
        - Europe/Vaduz
        - Europe/Vatican
        - Europe/Vienna
        - Europe/Warsaw
        - Europe/Zagreb
        - Europe/Zurich
        - MET
        - Poland
        - ECT
        - Africa/Blantyre
        - Africa/Bujumbura
        - Africa/Cairo
        - Africa/Gaborone
        - Africa/Harare
        - Africa/Johannesburg
        - Africa/Juba
        - Africa/Khartoum
        - Africa/Kigali
        - Africa/Lubumbashi
        - Africa/Lusaka
        - Africa/Maputo
        - Africa/Maseru
        - Africa/Mbabane
        - Africa/Tripoli
        - Africa/Windhoek
        - Asia/Amman
        - Asia/Beirut
        - Asia/Damascus
        - Asia/Famagusta
        - Asia/Gaza
        - Asia/Hebron
        - Asia/Jerusalem
        - Asia/Nicosia
        - Asia/Tel_Aviv
        - EET
        - Egypt
        - Etc/GMT-2
        - Europe/Athens
        - Europe/Bucharest
        - Europe/Chisinau
        - Europe/Helsinki
        - Europe/Kaliningrad
        - Europe/Kiev
        - Europe/Mariehamn
        - Europe/Nicosia
        - Europe/Riga
        - Europe/Sofia
        - Europe/Tallinn
        - Europe/Tiraspol
        - Europe/Uzhgorod
        - Europe/Vilnius
        - Europe/Zaporozhye
        - Israel
        - Libya
        - ART
        - CAT
        - Africa/Addis_Ababa
        - Africa/Asmara
        - Africa/Asmera
        - Africa/Dar_es_Salaam
        - Africa/Djibouti
        - Africa/Kampala
        - Africa/Mogadishu
        - Africa/Nairobi
        - Antarctica/Syowa
        - Asia/Aden
        - Asia/Baghdad
        - Asia/Bahrain
        - Asia/Istanbul
        - Asia/Kuwait
        - Asia/Qatar
        - Asia/Riyadh
        - Etc/GMT-3
        - Europe/Istanbul
        - Europe/Kirov
        - Europe/Minsk
        - Europe/Moscow
        - Europe/Simferopol
        - Europe/Volgograd
        - Indian/Antananarivo
        - Indian/Comoro
        - Indian/Mayotte
        - Turkey
        - W-SU
        - EAT
        - Asia/Tehran
        - Iran
        - Asia/Baku
        - Asia/Dubai
        - Asia/Muscat
        - Asia/Tbilisi
        - Asia/Yerevan
        - Etc/GMT-4
        - Europe/Astrakhan
        - Europe/Samara
        - Europe/Saratov
        - Europe/Ulyanovsk
        - Indian/Mahe
        - Indian/Mauritius
        - Indian/Reunion
        - NET
        - Asia/Kabul
        - Antarctica/Mawson
        - Asia/Aqtau
        - Asia/Aqtobe
        - Asia/Ashgabat
        - Asia/Ashkhabad
        - Asia/Atyrau
        - Asia/Dushanbe
        - Asia/Karachi
        - Asia/Oral
        - Asia/Qyzylorda
        - Asia/Samarkand
        - Asia/Tashkent
        - Asia/Yekaterinburg
        - Etc/GMT-5
        - Indian/Kerguelen
        - Indian/Maldives
        - PLT
        - Asia/Calcutta
        - Asia/Colombo
        - Asia/Kolkata
        - IST
        - Asia/Kathmandu
        - Asia/Katmandu
        - Antarctica/Vostok
        - Asia/Almaty
        - Asia/Bishkek
        - Asia/Dacca
        - Asia/Dhaka
        - Asia/Kashgar
        - Asia/Omsk
        - Asia/Qostanay
        - Asia/Thimbu
        - Asia/Thimphu
        - Asia/Urumqi
        - Etc/GMT-6
        - Indian/Chagos
        - BST
        - Asia/Rangoon
        - Asia/Yangon
        - Indian/Cocos
        - Antarctica/Davis
        - Asia/Bangkok
        - Asia/Barnaul
        - Asia/Ho_Chi_Minh
        - Asia/Hovd
        - Asia/Jakarta
        - Asia/Krasnoyarsk
        - Asia/Novokuznetsk
        - Asia/Novosibirsk
        - Asia/Phnom_Penh
        - Asia/Pontianak
        - Asia/Saigon
        - Asia/Tomsk
        - Asia/Vientiane
        - Etc/GMT-7
        - Indian/Christmas
        - VST
        - Asia/Brunei
        - Asia/Choibalsan
        - Asia/Chongqing
        - Asia/Chungking
        - Asia/Harbin
        - Asia/Hong_Kong
        - Asia/Irkutsk
        - Asia/Kuala_Lumpur
        - Asia/Kuching
        - Asia/Macao
        - Asia/Macau
        - Asia/Makassar
        - Asia/Manila
        - Asia/Shanghai
        - Asia/Singapore
        - Asia/Taipei
        - Asia/Ujung_Pandang
        - Asia/Ulaanbaatar
        - Asia/Ulan_Bator
        - Australia/Perth
        - Australia/West
        - Etc/GMT-8
        - Hongkong
        - PRC
        - Singapore
        - CTT
        - Australia/Eucla
        - Asia/Chita
        - Asia/Dili
        - Asia/Jayapura
        - Asia/Khandyga
        - Asia/Pyongyang
        - Asia/Seoul
        - Asia/Tokyo
        - Asia/Yakutsk
        - Etc/GMT-9
        - Japan
        - Pacific/Palau
        - ROK
        - JST
        - Australia/Adelaide
        - Australia/Broken_Hill
        - Australia/Darwin
        - Australia/North
        - Australia/South
        - Australia/Yancowinna
        - ACT
        - Antarctica/DumontDUrville
        - Antarctica/Macquarie
        - Asia/Ust-Nera
        - Asia/Vladivostok
        - Australia/ACT
        - Australia/Brisbane
        - Australia/Canberra
        - Australia/Currie
        - Australia/Hobart
        - Australia/Lindeman
        - Australia/Melbourne
        - Australia/NSW
        - Australia/Queensland
        - Australia/Sydney
        - Australia/Tasmania
        - Australia/Victoria
        - Etc/GMT-10
        - Pacific/Chuuk
        - Pacific/Guam
        - Pacific/Port_Moresby
        - Pacific/Saipan
        - Pacific/Truk
        - Pacific/Yap
        - AET
        - Australia/LHI
        - Australia/Lord_Howe
        - Antarctica/Casey
        - Asia/Magadan
        - Asia/Sakhalin
        - Asia/Srednekolymsk
        - Etc/GMT-11
        - Pacific/Bougainville
        - Pacific/Efate
        - Pacific/Guadalcanal
        - Pacific/Kosrae
        - Pacific/Norfolk
        - Pacific/Noumea
        - Pacific/Pohnpei
        - Pacific/Ponape
        - SST
        - Antarctica/McMurdo
        - Antarctica/South_Pole
        - Asia/Anadyr
        - Asia/Kamchatka
        - Etc/GMT-12
        - Kwajalein
        - NZ
        - Pacific/Auckland
        - Pacific/Fiji
        - Pacific/Funafuti
        - Pacific/Kwajalein
        - Pacific/Majuro
        - Pacific/Nauru
        - Pacific/Tarawa
        - Pacific/Wake
        - Pacific/Wallis
        - NST
        - NZ-CHAT
        - Pacific/Chatham
        - Etc/GMT-13
        - Pacific/Apia
        - Pacific/Enderbury
        - Pacific/Fakaofo
        - Pacific/Tongatapu
        - MIT
        - Etc/GMT-14
        - Pacific/Kiritimati
      row_module_id__mdl_name:
        description: Module name
        type: string
      usr_image_id:
        description: Picture
        type: object
      usr_minrows:
        description: Min size of lists
        type: integer
      row_module_id:
        description: Module
        type: string
      usr_login:
        description: Login
        type: string
      usr_country:
        description: Country
        type: string
        enum:
        - FR
        - UK
        - ES
        - DE
        - BE
        - CH
        - IE
        - CA
        - US
      usr_title:
        description: Title
        type: string
        enum:
        - MR
        - MRS
        - MS
      usr_logout:
        description: Logout
        type: string
        example: yyyy-MM-dd HH:mm:ss
      usr_home_id__viw_name:
        description: Home page
        type: string
      usr_menu_defdomain_id:
        description: Domain menu by default
        type: string
      usr_menu_defcollapsed:
        description: Menu collapsed by default
        type: boolean
      usr_uuid:
        description: UUID
        type: string
      usr_last_logon:
        description: Last logon
        type: string
        example: yyyy-MM-dd HH:mm:ss
      usr_first_name:
        description: First name
        type: string
      usr_home_num:
        description: Home phone
        type: string
      usr_email:
        description: Email address
        type: string
      usr_active:
        description: Active
        type: string
        enum:
        - '0'
        - '1'
        - '2'
        - '3'
      usr_menu:
        description: Menu visible
        type: boolean
      usr_zipcode:
        description: Postal/ZIP code
        type: string
      usr_address1:
        description: Address line 1
        type: string
      usr_address2:
        description: Address line 2
        type: string
      usr_last_name:
        description: Last name
        type: string
      usr_cell_num:
        description: Mobile/cellular phone number
        type: string
      usr_menu_defdomain_id__obd_name:
        description: Default opened domain
        type: string
      usr_city:
        description: City
        type: string
      usr_lang_pref:
        description: Preferred language
        type: string
        enum:
        - ENU
        - FRA
      usr_lang:
        description: Language
        type: string
        enum:
        - ENU
        - FRA
      usr_maxrows:
        description: Max size of lists
        type: integer
      row_id:
        description: Unique technical row ID
        type: string
      usr_work_num:
        description: Work phone number
        type: string
      usr_home_id:
        description: Home page
        type: string
      usr_state:
        description: State
        type: string
      usr_dateformat:
        description: Date format
        type: string
        enum:
        - YMD
        - DMY
        - MDY
        - CHF
  ArrayOfTestjObject:
    type: array
    items:
      $ref: '#/definitions/TestjObject'
  TestjObjectChild:
    type: object
    properties:
      testjObjDesc:
        description: Description
        type: string
      row_id:
        description: Unique technical row ID
        type: string
      testjObjDocument:
        description: Document to upload to EDM
        type: object
      testjObjDocumentURL:
        description: EDM document URL
        type: string
      testjObjCode:
        description: Code
        type: string
      testjObjFlag:
        description: Flag
        type: boolean
  ArrayOfTestjObjectChild:
    type: array
    items:
      $ref: '#/definitions/TestjObjectChild'
  TestjObject:
    type: object
    properties:
      testjObjDesc:
        description: Description
        type: string
      row_id:
        description: Unique technical row ID
        type: string
      testjObjDocument:
        description: Document to upload to EDM
        type: object
      testjObjDocumentURL:
        description: EDM document URL
        type: string
      testjObjCode:
        description: Code
        type: string
      testjObjFlag:
        description: Flag
        type: boolean
  ActionResult:
    type: object
    properties:
      result:
        description: Action result
        type: string
  TestjObjectHierarchy:
    type: object
    properties:
      row_id:
        description: Unique technical row ID
        type: string
  TreeviewData:
    type: object
    properties:
      item:
        description: Object item with lists of linked objects' items
        type: object
  TestjObjectGrandChild:
    type: object
    properties:
      testjObjDesc:
        description: Description
        type: string
      row_id:
        description: Unique technical row ID
        type: string
      testjObjDocument:
        description: Document to upload to EDM
        type: object
      testjObjDocumentURL:
        description: EDM document URL
        type: string
      testjObjCode:
        description: Code
        type: string
      testjObjFlag:
        description: Flag
        type: boolean
  Error400:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 400
  Error401:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 401
  Error500:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 500
  ArrayOfTestJavaUser:
    type: array
    items:
      $ref: '#/definitions/TestJavaUser'
  Error403:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 403
  TestServiceObject:
    type: object
    properties:
      testjSrvLabel:
        description: Label
        type: string
      row_id:
        description: Unique technical row ID
        type: string
      testjSrvCode:
        description: Code
        type: string
  ArrayOfTestServiceObject:
    type: array
    items:
      $ref: '#/definitions/TestServiceObject'
swagger: '2.0'
info:
  license:
    name: Simplicite license
    url: http://www.simplicitesoftware.com
  contact:
    name: Simplicite Software
    url: http://www.simplicitesoftware.com
    email: contact@simplicitesoftware.com
  description: API for module TestJava
  title: TestJava
  version: '5'
tags:
- name: TestJavaService
  description: Java service
- name: TestJavaUser
  description: Test java user
- name: TestjObject
  description: Java object
- name: TestjObjectChild
  description: Java object (child)
- name: TestjObjectGrandChild
  description: Java object (grand child)
- name: TestjObjectHierarchy
  description: Java object hierarchy
- name: TestServiceObject
  description: Service object example
